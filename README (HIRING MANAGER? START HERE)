
R.L. Fornea
R. Gallagher


Turtle-Compiler
Lex and Yacc translate a made-up "turtle language" into working python code 

HIRING MANAGERS READ THIS: 
	The files that my partner and I wrote for this project are pyturtle.y, turtle.l, makefile, and the sample input programs.  
	If you are assessing my programming ability the files you'll want to pay attention to are pyturtle.y and turtle.l, particularly 
	pyturtle.y which is where all the translation happens to turn a file written in "turtle language" into python.  The pyturtle.y 
	file itself is in C.  Then you will want to check out each input file written in "turtle language" and compare it to its 
	corresponding output file to verify that we translated them correctly (we did).  TurtleProjDoc.doc is the report that we 
	submitted to our professor on this project.  Feel free to read it if you are curious about our programming choices.  

Building and Executing
	The project is already built.  The executable file is simply called "turtle."  But if something happens to this file, just run 
	"make" again, ensuring that all files mentioned in the makefile are in the linux directory.  This will re-build the "turtle" 
	executable.  To run the executable on a program written in turtle language, run this command in the linux directory that contains 
	both the input file and turtle file:
			./turtle < inputProgramName > outputProgramName 

Executable File
	turtle
	("./turtle < inputProgramName > outputProgramName" to run)

Project Files
	pyturtle.y  --  yacc file, translates turtle language tokens into python code
        turtle.l    --  lex file, scans tokens from the program written in "turtle language"
	makefile    --  the makefile, builds the file 
	lex.yy.c    --  needed for Lex to work
	pyturtle.output
	pyturtle.tab.c
	pyturtle.tab.h

Sample Input Files
	smallTest       //these are all input files written in Turtle language
	bigTest
	building
	
Sample Output Files
	smallTest.py    //these files are the result of the input files being ran through the turtle executable.
	bigTest.py      //if you download these files to a computer with Python 3.5 installed and double-click them,
	building.py     //the clicked program will run and produce a picture -- building.py is the best one.  

